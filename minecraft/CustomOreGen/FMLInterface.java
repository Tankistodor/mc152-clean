package CustomOreGen;

import CustomOreGen.Client.ClientState;
import CustomOreGen.Server.ServerState;
import cpw.mods.fml.common.FMLCommonHandler;
import cpw.mods.fml.common.ITickHandler;
import cpw.mods.fml.common.IWorldGenerator;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.TickType;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.Mod.Metadata;
import cpw.mods.fml.common.Mod.PreInit;
import cpw.mods.fml.common.Mod.ServerStarting;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.event.FMLServerStartingEvent;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.common.registry.TickRegistry;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import java.util.Arrays;
import java.util.EnumSet;
import java.util.Random;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.GuiCreateWorld;
import net.minecraft.client.gui.GuiMainMenu;
import net.minecraft.client.gui.GuiSelectWorld;
import net.minecraft.server.MinecraftServer;
import net.minecraft.world.World;
import net.minecraft.world.chunk.IChunkProvider;
import net.minecraft.world.storage.WorldInfo;

@Mod(
        modid = "CustomOreGen",
        name = "Custom Ore Generation",
        version = "[1.5.2]tankemod",
        acceptedMinecraftVersions = "[1.5.2]",
        dependencies = "after:*;",
        useMetadata = false
)
public class FMLInterface implements ITickHandler, IWorldGenerator
{
    @Instance("CustomOreGen")
    public static FMLInterface instance;
    @Metadata("CustomOreGen")
    public static ModMetadata metaData;
    @Metadata("mod_CustomOreGen")
    public static ModMetadata modloaderMetaData;
    private Object _worldCreationGui = null;
    private long _serverTickCount = 0L;

    @PreInit
    public void onFMLPreInit(FMLPreInitializationEvent var1)
    {
        CustomOreGenBase.log = var1.getModLog();
        CustomOreGenBase.log.finer("Registering FML interface ...");
        TickRegistry.registerTickHandler(this, FMLCommonHandler.instance().getSide());
        GameRegistry.registerWorldGenerator(this);

        if (CustomOreGenBase.hasForge())
        {
            ForgeInterface.createAndRegister();
        }

        modloaderMetaData.parent = "CustomOreGen";
        metaData.description = "Allows the player to customize how ore is generated.";
        metaData.url = "http://www.minecraftforum.net/topic/1107057-";
        metaData.authorList = Arrays.asList(new String[] {"JRoush"});
        metaData.credits = "Thanks to marcopolo1613, Cadde, mossman1223.";
        metaData.logoFile = "/CustomOreGen/Logo.png";
        metaData.autogenerated = false;
    }

    @ServerStarting
    public void onServerStarting(FMLServerStartingEvent var1)
    {
        ServerState.checkIfServerChanged(MinecraftServer.getServer(), (WorldInfo)null);
    }

    public void generate(Random var1, int var2, int var3, World var4, IChunkProvider var5, IChunkProvider var6)
    {
        ServerState.checkIfServerChanged(MinecraftServer.getServer(), var4.getWorldInfo());
        ServerState.onPopulateChunk(var4, var1, var2, var3);
    }

    public void tickStart(EnumSet var1, Object ... var2) {}

    public void tickEnd(EnumSet var1, Object ... var2)
    {
        if (var1.contains(TickType.SERVER))
        {
            this.onServerTick();
        }

        if (var1.contains(TickType.CLIENT))
        {
            this.onClientTick();
        }
    }

    private void onServerTick()
    {
        ServerState.checkIfServerChanged(MinecraftServer.getServer(), (WorldInfo)null);
        ++this._serverTickCount;
    }

    @SideOnly(Side.CLIENT)
    private void onClientTick()
    {
        Minecraft var1 = Minecraft.getMinecraft();

        if (var1.theWorld == null && var1.currentScreen != null)
        {
            if (var1.currentScreen instanceof GuiCreateWorld)
            {
                if (this._worldCreationGui == null)
                {
                    this._worldCreationGui = var1.currentScreen;
                }

                ServerState.onWorldCreationMenuTick((GuiCreateWorld)var1.currentScreen);
            }
            else if (this._worldCreationGui != null && (var1.currentScreen instanceof GuiSelectWorld || var1.currentScreen instanceof GuiMainMenu))
            {
                this._worldCreationGui = null;
                ServerState.onWorldCreationMenuTick((GuiCreateWorld)null);
            }
        }
        else if (this._worldCreationGui != null)
        {
            this._worldCreationGui = null;
            ServerState.onWorldCreationMenuTick((GuiCreateWorld)null);
        }

        if (var1.isSingleplayer())
        {
            this.onServerTick();
        }

        if (var1.theWorld != null && ClientState.hasWorldChanged(var1.theWorld))
        {
            ClientState.onWorldChanged(var1.theWorld);
        }
    }

    public EnumSet ticks()
    {
        return EnumSet.of(TickType.CLIENT, TickType.SERVER);
    }

    public String getLabel()
    {
        return "CustomOreGen.FMLInterface";
    }
}
